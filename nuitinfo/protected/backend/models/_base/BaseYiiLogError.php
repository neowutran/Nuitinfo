<?php

/**
 * This is the model base class for the table "YiiLogError".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "YiiLogError".
 *
 * Columns in table "YiiLogError" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string  $level
 * @property string  $category
 * @property integer $logtime
 * @property string  $message
 *
 */
abstract class BaseYiiLogError extends GxActiveRecord
{

    public static function model($className = __CLASS__)
    {

        return parent::model($className);
    }

    public function tableName()
    {

        return 'YiiLogError';
    }

    public static function label($n = 1)
    {

        return Yii::t('app', 'YiiLogError|YiiLogErrors', $n);
    }

    public static function representingColumn()
    {

        return 'level';
    }

    public function rules()
    {

        return array(
            array('logtime', 'numerical', 'integerOnly' => true),
            array('level, category', 'length', 'max' => 128),
            array('message', 'safe'),
            array('level, category, logtime, message', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, level, category, logtime, message', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {

        return array();
    }

    public function pivotModels()
    {

        return array();
    }

    public function attributeLabels()
    {

        return array(
            'id'       => Yii::t('app', 'ID'),
            'level'    => Yii::t('app', 'Level'),
            'category' => Yii::t('app', 'Category'),
            'logtime'  => Yii::t('app', 'Logtime'),
            'message'  => Yii::t('app', 'Message'),
        );
    }

    public function search()
    {

        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('level', $this->level, true);
        $criteria->compare('category', $this->category, true);
        $criteria->compare('logtime', $this->logtime);
        $criteria->compare('message', $this->message, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}
